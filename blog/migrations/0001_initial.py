# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-03-29 03:25
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_auto_20170312_1342'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='姓名')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False, verbose_name='员工 状态')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sex', models.CharField(choices=[('0', '女'), ('1', '男'), ('2', '未知')], max_length=1, verbose_name='性别')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='手机')),
                ('qq', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='QQ')),
                ('image', models.ImageField(blank=True, default='image/avatar/default.jpg', max_length=200, null=True, upload_to='image/avatar/%Y/%m/%d', verbose_name='头像')),
                ('profile', models.TextField(blank=True, null=True, verbose_name='个人简介')),
                ('marriage', models.CharField(blank=True, choices=[('0', '未婚'), ('1', '已婚'), ('2', '离异')], max_length=1, null=True, verbose_name='婚姻状况')),
                ('occupation', models.CharField(blank=True, choices=[('0', '士'), ('1', '农'), ('2', '工'), ('3', '商')], max_length=1, null=True, verbose_name='职业')),
                ('home_province', models.CharField(blank=True, choices=[('0', '北京市'), ('1', '天津市'), ('2', '上海市'), ('3', '重庆市'), ('4', '河北省'), ('5', '山西省'), ('6', '陕西省'), ('7', '山东省'), ('8', '河南省'), ('9', '辽宁省'), ('10', '吉林省'), ('11', '黑龙江省'), ('12', '江苏省'), ('13', '浙江省'), ('14', '安徽省'), ('15', '江西省'), ('16', '福建省'), ('17', '湖北省'), ('19', '湖南省'), ('20', '四川省'), ('21', '贵州省'), ('22', '云南省'), ('23', '广东省'), ('24', '青海省'), ('25', '海南省'), ('26', '甘肃省'), ('27', '台湾省'), ('28', '广西壮族自治区'), ('29', '内蒙古自治区'), ('30', '新疆维吾尔自治区'), ('31', '西藏自治区'), ('32', '宁夏回族自治区'), ('33', '香港特别行政区'), ('34', '澳门特别行政区')], max_length=2, null=True, verbose_name='省')),
                ('home_city', models.CharField(blank=True, choices=[('0', '石家庄'), ('1', '张家口'), ('2', '唐山'), ('3', '秦皇岛'), ('4', '邯郸'), ('5', '邢台'), ('6', '保定'), ('7', '承德'), ('8', '沧州'), ('9', '廊坊'), ('10', '衡水'), ('11', '太原'), ('12', '大同'), ('13', '阳泉'), ('14', '长治'), ('15', '晋城'), ('16', '朔州'), ('17', '晋中'), ('18', '运城'), ('19', '忻州'), ('20', '临汾'), ('21', '吕梁'), ('22', '呼和浩特'), ('23', '包头'), ('24', '乌海'), ('25', '赤峰'), ('26', '通辽'), ('27', '鄂尔多斯'), ('28', '呼伦贝尔'), ('29', '巴彦淖尔'), ('30', '乌兰察布'), ('31', '兴安'), ('32', '锡林郭勒'), ('33', '阿拉善'), ('34', '南京'), ('35', '无锡'), ('36', '苏州'), ('37', '常州'), ('38', '镇江'), ('39', '南通'), ('40', '泰州'), ('41', '扬州'), ('42', '盐城'), ('43', '淮安'), ('44', '宿迁'), ('45', '连云港'), ('46', '徐州'), ('47', '杭州'), ('48', '宁波'), ('49', '温州'), ('50', '嘉兴'), ('51', '湖州'), ('52', '绍兴'), ('53', '金华'), ('54', '衢州'), ('55', '舟山'), ('56', '台州'), ('57', '丽水')], max_length=3, null=True, verbose_name='市')),
                ('last_log_in_date', models.DateTimeField(auto_now=True, verbose_name='上次登录时间')),
                ('school', models.CharField(blank=True, max_length=32, null=True, verbose_name='学校')),
                ('profession', models.CharField(blank=True, max_length=32, null=True, verbose_name='专业')),
                ('school_date', models.DateField(blank=True, null=True, verbose_name='入学时间')),
                ('company', models.CharField(blank=True, max_length=32, null=True, verbose_name='公司')),
                ('position', models.CharField(blank=True, max_length=32, null=True, verbose_name='职位')),
                ('work_date', models.DateField(blank=True, null=True, verbose_name='入职时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name_plural': '用户',
                'verbose_name': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='标题')),
                ('desc', models.CharField(max_length=64, verbose_name='描述')),
                ('image_url', models.ImageField(default='image/ad/default.jpg', upload_to='image/ad/%Y/%m/%d', verbose_name='图片地址')),
                ('link_url', models.URLField(verbose_name='链接地址')),
                ('publish_date', models.DateTimeField(auto_now_add=True, verbose_name='发表时间')),
                ('click_count', models.IntegerField(default=0, verbose_name='点击次数')),
            ],
            options={
                'ordering': ['-click_count'],
                'verbose_name_plural': '广告',
                'verbose_name': '广告',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='题目')),
                ('desc', models.CharField(max_length=128, verbose_name='描述')),
                ('content', models.TextField(verbose_name='内容')),
                ('publish_date', models.DateTimeField(auto_now_add=True, verbose_name='发表时间')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='是否推荐')),
                ('read_count', models.IntegerField(default=0, verbose_name='阅读次数')),
                ('collect_count', models.IntegerField(default=0, verbose_name='收藏次数')),
                ('reprint_count', models.IntegerField(default=0, verbose_name='转载')),
                ('channel', models.CharField(choices=[('0', '新闻'), ('1', '体育'), ('2', '财经'), ('3', '娱乐'), ('4', '科技'), ('5', '博客'), ('6', '图片'), ('7', '育儿'), ('8', '文史'), ('9', '女性')], default='4', max_length=2, verbose_name='频道')),
            ],
            options={
                'ordering': ['-publish_date'],
                'verbose_name_plural': '文章',
                'verbose_name': '文章',
            },
        ),
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=10, verbose_name='分类')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name_plural': '分类',
                'verbose_name': '分类',
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=64, verbose_name='内容')),
                ('publish_date', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('article_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Article', verbose_name='文章ID')),
                ('p_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.ArticleComment', verbose_name='父级评论')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'ordering': ['-publish_date'],
                'verbose_name_plural': '评论',
                'verbose_name': '评论',
            },
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=32, verbose_name='标签')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name_plural': '标签',
                'verbose_name': '标签',
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='标题')),
                ('desc', models.CharField(max_length=64, verbose_name='描述')),
                ('link_url', models.CharField(max_length=64, verbose_name='链接地址')),
                ('publish_date', models.DateTimeField(auto_now_add=True, verbose_name='发表时间')),
                ('click_count', models.IntegerField(default=0, verbose_name='使用次数')),
            ],
            options={
                'ordering': ['-click_count'],
                'verbose_name_plural': '友情链接',
                'verbose_name': '友情链接',
            },
        ),
        migrations.CreateModel(
            name='UserCollectArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Article', verbose_name='文章ID')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name_plural': '收藏',
                'verbose_name': '收藏',
            },
        ),
        migrations.CreateModel(
            name='UserExt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_message', models.BooleanField(default=False, verbose_name='是否留言')),
                ('message', models.TextField(blank=True, verbose_name='留言')),
                ('guest_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userext_guest', to=settings.AUTH_USER_MODEL, verbose_name='访客ID')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userext_user', to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name_plural': '留言',
                'verbose_name': '留言',
            },
        ),
        migrations.CreateModel(
            name='UserFans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fans_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userfans_fans', to=settings.AUTH_USER_MODEL, verbose_name='粉丝ID')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userfans_user', to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name_plural': '粉丝',
                'verbose_name': '粉丝',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.ArticleCategory', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag_id',
            field=models.ManyToManyField(to='blog.ArticleTag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='article',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
    ]
